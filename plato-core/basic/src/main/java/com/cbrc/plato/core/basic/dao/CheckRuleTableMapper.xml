<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cbrc.plato.core.basic.dao.CheckRuleTableMapper">
  <resultMap id="BaseResultMap" type="com.cbrc.plato.util.datarule.checktable.CheckRuleTable">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
    <result column="rule_discribe" jdbcType="VARCHAR" property="ruleDiscribe" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user" jdbcType="INTEGER" property="user" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="accuracy" jdbcType="VARCHAR" property="accuracy" />
    <result column="self_accuracy" jdbcType="VARCHAR" property="selfAccuracy" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, rule_name, rule_discribe, create_time, update_time, status, user, department,accuracy,self_accuracy,department_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qnyj_check_rule_table
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByRuleNameAndUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from qnyj_check_rule_table
    where rule_name = #{ruleName,jdbcType=VARCHAR}
    and user = #{uid,jdbcType=INTEGER}
  </select>

  <select id="selectAllByRuleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from qnyj_check_rule_table
    <if test="_parameter != null">
      where rule_name like CONCAT('%',#{ruleName},'%')
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from qnyj_check_rule_table
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cbrc.plato.util.datarule.checktable.CheckRuleTable">
    insert into qnyj_check_rule_table (id, rule_name, rule_discribe, 
      create_time, update_time, status, 
      user, department,accuracy,self_accuracy,department_id)
    values (#{id,jdbcType=INTEGER}, #{ruleName,jdbcType=VARCHAR}, #{ruleDiscribe,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{user,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{accuracy,jdbcType=VARCHAR}), #{selfAccuracy,jdbcType=VARCHAR},#{departmentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cbrc.plato.util.datarule.checktable.CheckRuleTable">
    insert into qnyj_check_rule_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleName != null">
        rule_name,
      </if>
      <if test="ruleDiscribe != null">
        rule_discribe,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="accuracy != null">
        accuracy,
      </if>
      <if test="selfAccuracy != null">
        self_accuracy,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null">
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="ruleDiscribe != null">
        #{ruleDiscribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        #{user,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="accuracy != null">
        #{accuracy,jdbcType=VARCHAR},
      </if>
      <if test="selfAccuracy != null">
        #{selfAccuracy,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cbrc.plato.util.datarule.checktable.CheckRuleTable">
    update qnyj_check_rule_table
    <set>
      <if test="ruleName != null">
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="ruleDiscribe != null">
        rule_discribe = #{ruleDiscribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        user = #{user,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="accuracy != null">
        accuracy = #{accuracy,jdbcType=VARCHAR},
      </if>
      <if test="selfAccuracy != null">
        self_accuracy = #{selfAccuracy,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cbrc.plato.util.datarule.checktable.CheckRuleTable">
    update qnyj_check_rule_table
    set rule_name = #{ruleName,jdbcType=VARCHAR},
      rule_discribe = #{ruleDiscribe,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      user = #{user,jdbcType=INTEGER},
      department = #{department,jdbcType=VARCHAR},
      accuracy = #{accuracy,jdbcType=VARCHAR},
      self_accuracy = #{selfAccuracy,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>